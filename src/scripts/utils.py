# Helper function for getting string inputs to PSQL to work correctly
import datetime
import re


def str_psql(x):
    if isinstance(x, str):
        if 'VALUES' not in x and x[0] != '(' and x != 'NULL':
            return "'%s'" % (x,)
    if isinstance(x, list) or isinstance(x, tuple):
        return '(%s)' % ','.join(str(a) for a in x)
    return str(x)


def str_special(x):
    """
    Convert specific data types to strings for PSQL insertion - leave all others
    untouched
    """
    if isinstance(x, datetime.date):
        return x.strftime('%Y-%m-%d')
    if isinstance(x, datetime.datetime):
        return x.strftime('%Y-%m-%d %H:%M:%S')
    return x


def str_dts(x):
    """
    In a potential SQL string, convert any instances of datetime.date or
    datetime.datetime to their string representation *without* leaving in the
    Python string quotes
    """
    dd = re.compile(r'[\'"](datetime\.date.*?)[\'"]')
    return re.sub(dd, '\g<1>', x)


def generate_conditions_string(conditions):
    """
    Generate a conditions string for use with making PSQL queries.

    Parameters
    ----------
    conditions:
        A list of three-tuples defining conditions, e.g.:
        [(column, condition, value), ...]
        Column must be a table column name. Condition must be a *string* of a
        valid PSQL comparison (e.g. '=', '<=', 'LIKE' etc.). Value should be in
        the correct Python form relevant to the table column.

    Returns
    -------
    conditions_string:
        The string of PSQL conditions which can be inserted into a query string.
        Note that the string will *not* contain a leading WHERE clause, to allow
        multiple conditions strings (some possibly not generated by this
        function) to be combined more easily.
    """

    for i in range(len(conditions)):
        x = conditions[i]
        conditions[i] = (str(x[0]), str(x[1]), str_psql(x[2]))

    conditions_string = ' AND '.join([' '.join(x)
                                      for x in conditions])
    return conditions_string
